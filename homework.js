// 'number' + 3 + 3
// 'number' + 3 = 'number3' (Сначала к строке добавляется цифра, которая превращается в строку)
// 'number3' + 3 = 'number33' (Теперь к строке с цифрой добавляется ещё одна цифра, которая аналогично превращается в строку)


// null + 3 (null к приведению числа даёт 0)
// 0 + 3 = 3


// 5 && "qwerty"
// && - возвращает последний True елемент либо первый False
// 5 - true, "qwerty" также true. Поэтому результат будет "qwerty"


// +'40' + + '2' + "hillel"
// +'40' - из строки в число
// +'2' - из строки в цифру
// '40' + '2' = '42'
// '42' + "hillel" = "42hillel" - результат


// '10' - 5 === 6
// '10' - превращается в число
// 10 - 5 = 5
// 5 === 6 - false


// true + false
// true превращается в цифру 1, а false в 0
// 1 + 0 = 1


// '4px' - 3
// '4px' не может быть числом, поэтому результат будет NaN


// '4' - 3
// '4' - строка превращается в цифру 4
// 4 - 3 = 1 результат


// '6' + 3 ** 0
// сначала мы возводим цифру в степень, так как возведение имеет приоритет выше, чем сложение (3 ** 0 = 1)
// '6' у нас остаётся строкой, так как один из операндов является строкой, а другой -  числом, мы приводим число к строке
// '6' + 1 = '61' результат


// 12 / '6'
// '6' - превращается в цифру
// 12 / 6 = 2 результат


// '10' + (5 === 6);
// (5 === 6 ) - false
// '10' + false = '10false' число прибавляется к строке


// null == ''
// null и пустая строке не равны по типу и значению. Результат будет False


// 3 ** (9/3)
// сначала действие в скобках, получаем ответ 3
// 3 ** 3 = 27 результат


// !!'false' == !!'true'
// оба возвращают булевое значение true, потому что оба операнда — непустые строки
// Оператор двойного отрицания !! используется для преобразования значения в его булевый эквивалент
// В JavaScript любая непустая строка считается логически истинной (true), независимо от её содержимого
// true == true результат


// 0 || '0' && 1
// 0 || '0'     0 - это false и мы проверяем второй операнд ('0'), который является True
// '0' && 1    оба являются true, поэтому результат будет - 1


// (+null == false) < 1
// +null - это 0
// 0 == false - это true
// true < 1 , поскольку true - 1, 1 не может быть меньше 1, соответственно результат будет false


// false && true || true
// false && true  - это false
// fasle || true - это true

//false && (false || true)
// false || true - это true
// false && true - это false


// (+null == false) < 1 ** 5
// +null - это 0
// 0 == false - это true
// 1 ** 5 = 1
// true < 1  поскольку true - 1, 1 не может быть меньше 1, соответственно результат будет false